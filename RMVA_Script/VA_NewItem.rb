#encoding:utf-8

=begin
#==============================================================================
# ■ 新物品提示 v1.0
#    最後更新：2020/5/3
#--------------------------------------------------------------------------
#    取得新物品時給物品名稱上色，調查物品後恢復原色
#==============================================================================
#--------------------------------------------------------------------------
# ● 聯絡方式
#--------------------------------------------------------------------------
  http://home.gamer.com.tw/homeindex.php?owner=qootm2
  https://twitter.com/STILILA
  
#--------------------------------------------------------------------------
# ● 使用法
#--------------------------------------------------------------------------
安裝插件即可生效，另可獨立設定該道具是否要提示。
記得往下看自定義設置的部分。

=end



# 自定義設置
module STILILA
  
#--------------------------------------------------------------------------
# ● 模式(0：有新增就提示，1：在資料庫設定才有提示)
#--------------------------------------------------------------------------
NewItem_Mode = 0
#--------------------------------------------------------------------------
# ● 除外的註解，寫在該道具的註解欄
#--------------------------------------------------------------------------
NewItem_IgnoreText = "<新增時不提示>"
#--------------------------------------------------------------------------
# ● 必定會提示的註解
#--------------------------------------------------------------------------
NewItem_HighLightText = "<新增時提示>"

end



#==============================================================================
# ■ Game_Party 
#==============================================================================
class Game_Party < Game_Unit
  #--------------------------------------------------------------------------
  # ● 初始化持有物數據
  #--------------------------------------------------------------------------
  alias :stlla_newitem_init_all_items :init_all_items
  def init_all_items
    stlla_newitem_init_all_items
    @new_items = {RPG::Item => {}, RPG::Weapon => {}, RPG::Armor => {}}
  end

  #--------------------------------------------------------------------------
  # ● 檢索新增物品清單
  #--------------------------------------------------------------------------
  def new_items(type)
    # 其實是為了這一行才做這方法
    @new_items = {RPG::Item => {}, RPG::Weapon => {}, RPG::Armor => {}} if !@new_items
    return @new_items[type]
  end

  #--------------------------------------------------------------------------
  # ● 增加／減少物品
  #--------------------------------------------------------------------------
  alias :stlla_newitem_gain_item :gain_item
  def gain_item(item, amount, include_equip = false)
    container = item_container(item.class)
    return unless container
    # 新增的物品設置未檢查標記
    if item_number(item) == 0 && amount > 0 && !item.note.include?(STILILA::NewItem_IgnoreText) && (STILILA::NewItem_Mode == 0 || item.note.include?(STILILA::NewItem_HighLightText))
      new_items(item.class)[item.id] = true
    end  
    stlla_newitem_gain_item(item, amount, include_equip)
  end
end


#==============================================================================
# ■ Window_ItemList
#==============================================================================
class Window_ItemList < Window_Selectable
  #--------------------------------------------------------------------------
  # ● 按下確定鍵時
  #--------------------------------------------------------------------------
  def process_ok
    super
    item = self.item
    # 刪除key
    if item && $game_party.new_items(item.class)[item.id]
      $game_party.new_items(item.class).delete(item.id) 
    end
    # 重繪項目
    redraw_current_item
  end
  #--------------------------------------------------------------------------
  # ● 描繪物品名稱
  #--------------------------------------------------------------------------
  def draw_item_name(item, x, y, enabled = true, width = 172)
    return unless item
    draw_icon(item.icon_index, x, y, enabled)
    if $game_party.new_items(item.class)[item.id]
      change_color(crisis_color, enabled)
    else
      change_color(normal_color, enabled)
    end
    draw_text(x + 24, y, width, line_height, item.name)
  end
  
end
